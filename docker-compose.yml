services:
  web-app:
    build:
      context: ./Web App
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ./Web App:/app
      - ./Web App/logs:/app/logs
    depends_on:
      - portfolio-optimisation
      - sentiment-analysis
      - stock-prediction
    # - prometheus

  portfolio-optimisation:
    build:
      context: ./Model Inference/portfolio optimisation
      dockerfile: Dockerfile
    volumes:
      - ./Model Inference/portfolio optimisation:/app
      - ./Model Inference/portfolio optimisation/logs:/app/logs
    env_file:
      - ./Model Inference/portfolio optimisation/.env
    environment:
      - TZ=Asia/Kolkata

  sentiment-analysis:
    build:
      context: ./Model Inference/sentiment-analysis
      dockerfile: Dockerfile.sentiment
    volumes:
      - ./Model Inference/sentiment-analysis/scripts:/app/scripts
      - ./Model Inference/sentiment-analysis/logs:/app/logs
    env_file:
      - ./Model Inference/sentiment-analysis/.env
    environment:
      - TZ=Asia/Kolkata

  stock-prediction:
    build:
      context: ./Model Inference/stock prediction/inference
      dockerfile: Dockerfile
    volumes:
      - ./Model Inference/stock prediction/inference:/app
      - ./Model Inference/stock prediction/inference/models:/app/models
      - ./Model Inference/stock prediction/inference/logs:/app/logs
    environment:
      - TZ=Asia/Kolkata

  # # Node Exporter service
  # node-exporter:
  #   build:
  #     context: ./Monitoring
  #     dockerfile: Dockerfile.node-exporter
  #   container_name: node-exporter
  #   ports:
  #     - "18000:18000"
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - ./Monitoring/logs:/app/logs
  #   environment:
  #     - TZ=Asia/Kolkata

  # # Prometheus service
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./Monitoring/prometheus-2.44.0.linux-amd64/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #     - "--storage.tsdb.path=/prometheus"
  #     - "--web.console.libraries=/etc/prometheus/console_libraries"
  #     - "--web.console.templates=/etc/prometheus/consoles"
  #     - "--web.enable-lifecycle"
  #   environment:
  #     - TZ=Asia/Kolkata

  # # Grafana service
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./Monitoring/dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
  #     - ./Monitoring/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
  #     - ./Monitoring/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #     - TZ=Asia/Kolkata
  #   depends_on:
  #     - prometheus
# volumes:
#   prometheus_data:
#   grafana_data:
